{"version":3,"sources":["components/Toolbar/logo.JPG","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","toolbar","props","className","src","require","href","sideDrawer","icon","thLarge","card","Img","variant","roundedCircle","Body","Title","style","color","title","Subtitle","subtitle","number","Text","text","Button","button","App","height","marginTop","marginLeft","textStyle","classNAme","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4LAAAA,EAAOC,QAAU,IAA0B,kC,wMCkB5BC,EAdC,SAAAC,GAAK,OACpB,4BAAQC,UAAU,WACjB,yBAAKA,UAAU,sBACd,yBAAKA,UAAU,gBAAe,yBAAKC,IAAKC,EAAQ,OAChD,yBAAKF,UAAU,WACf,yBAAKA,UAAU,4BACd,4BACC,4BAAI,uBAAGG,KAAK,KAAI,kBAAC,IAAD,QAChB,4BAAI,uBAAGA,KAAK,KAAR,e,iCCKMC,EAXI,SAAAL,GAClB,OACC,yBAAKC,UAAU,eACd,4BACC,4BAAI,6BAAK,uBAAGG,KAAK,KAAI,kBAAC,OAAD,CAAME,KAAMC,SACjC,4BAAI,6BAAK,uBAAGH,KAAK,KAAI,kBAAC,IAAD,SACrB,4BAAI,6BAAK,uBAAGA,KAAK,KAAI,kBAAC,IAAD,Y,gCCUVI,EAbF,SAAAR,GAAK,OACjB,kBAAC,IAAD,CAAMC,UAAU,QACb,kBAAC,IAAKQ,IAAN,CAAUC,QAAQ,MAAMR,IAAI,qBAAqBS,eAAa,IAC9D,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAKC,MAAN,CAAYZ,UAAU,QAAQa,MAAO,CAACC,MAAM,YAAaf,EAAMgB,OAC/D,kBAAC,IAAKC,SAAN,KAAgBjB,EAAMkB,SAAS,wCAAqBlB,EAAMmB,QAC1D,kBAAC,IAAKC,KAAN,KACIpB,EAAMqB,MAEV,kBAACC,EAAA,EAAD,CAAQZ,QAAQ,WAAWI,MAAO,CAACC,MAAM,WAAYd,UAAU,eAAeD,EAAMuB,WCgC3EC,G,uLA1CX,OACE,yBAAKV,MAAO,CAACW,OAAO,SAClB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,0BAAMX,MAAO,CAACY,UAAW,QAASC,WAAY,OAAQC,UAAW,KAC/D,wBAAIC,UAAU,SAAd,kBAEF,yBAAK5B,UAAU,mBAEf,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAMA,UAAU,OAAOe,MAAM,iBAAiBE,SAAS,QAAQC,OAAO,MAAMI,OAAO,QACnFF,KAAK,wHAEP,yBAAKpB,UAAU,UACb,kBAAC,EAAD,CAAMA,UAAU,OAAOe,MAAM,wBAAwBE,SAAS,QAAQC,OAAO,OAAOI,OAAO,QAC3FF,KAAK,wHAEP,yBAAKpB,UAAU,UACb,kBAAC,EAAD,CAAMA,UAAU,OAAOe,MAAM,aAAaE,SAAS,QAAQC,OAAO,OAAOI,OAAO,QAChFF,KAAK,yHAGT,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAMA,UAAU,OAAOe,MAAM,SAASE,SAAS,QAAQC,OAAO,OAAOI,OAAO,QAC5EF,KAAK,wHAEP,yBAAKpB,UAAU,UACb,kBAAC,EAAD,CAAMA,UAAU,OAAOe,MAAM,iBAAiBE,SAAS,QAAQC,OAAO,OAAOI,OAAO,QACpFF,KAAK,wHAEP,yBAAKpB,UAAU,UACb,kBAAC,EAAD,CAAMA,UAAU,OAAOe,MAAM,sBAAsBE,SAAS,QAAQC,OAAO,MAAMI,OAAO,QACxFF,KAAK,8H,GApCCS,cCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.13d24788.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.679e529c.JPG\";","import React from 'react';\r\nimport './Toolbar.css'\r\nimport { FaBell } from 'react-icons/fa';\r\n\r\nconst toolbar = props => (\r\n\t<header className=\"toolbar\">\r\n\t\t<nav className=\"toolbar_navigation\">\r\n\t\t\t<div className=\"toolbar_logo\"><img src={require('./logo.JPG')} /></div>\r\n\t\t\t<div className=\"spacer\" />\r\n\t\t\t<div className=\"toolbar_navigation-items\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><a href=\"/\"><FaBell /></a></li>\r\n\t\t\t\t\t<li><a href=\"/\">Users</a></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t</header>\r\n);\r\nexport default toolbar;","import React from 'react';\r\nimport './SideDrawer.css'\r\nimport { FaSearch, FaStore } from 'react-icons/fa';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport thLarge from '@iconify/icons-el/th-large';\r\n\r\nconst sideDrawer = props => {\r\n\treturn(\r\n\t\t<nav className=\"side-drawer\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li><div><a href=\"/\"><Icon icon={thLarge} /></a></div></li>\r\n\t\t\t\t<li><div><a href=\"/\"><FaSearch /></a></div></li>\r\n\t\t\t\t<li><div><a href=\"/\"><FaStore /></a></div></li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\nexport default sideDrawer;","import React from 'react';\r\nimport './Card.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Image from 'react-bootstrap/Image'\r\n/*import Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';*/\r\n\r\nconst card = props => (\r\n\t<Card className=\"card\">\r\n  \t\t<Card.Img variant=\"top\" src=\"holder.js/100px180\" roundedCircle/>\r\n  \t\t<Card.Body>\r\n    \t\t<Card.Title className=\"title\" style={{color:\"#404040\"}}>{props.title}</Card.Title>\r\n    \t\t<Card.Subtitle>{props.subtitle}<span>&#8377;</span>{props.number}</Card.Subtitle>\r\n    \t\t<Card.Text>\r\n      \t\t\t{props.text}\r\n    \t\t</Card.Text>\r\n    \t\t<Button variant=\"outlined\" style={{color:'#20B2AA'}} className=\"card-button\">{props.button}</Button>\r\n  \t\t</Card.Body>\r\n\t</Card>\r\n);\r\nexport default card;","import React, { Component } from 'react';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Card from './components/Card/Card';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <div style={{height:'100%'}}>\n        <Toolbar />\n        <SideDrawer />\n        <main style={{marginTop: '100px', marginLeft: '9rem', textStyle: ''}}>\n          <h1 classNAme=\"title\">Content Store</h1>\n        </main>\n        <div className=\"main_container\">\n        </div>\n        <div className=\"row\">\n          <div className=\"column\">\n            <Card className=\"card\" title=\"Blog / Article\" subtitle=\"from \" number=\"500\" button=\"Order\"\n            text=\"Typically 4550-500 words, an e-book is perfect for your target audience ranging from prospecive customers to users\"/>\n          </div>\n          <div className=\"column\">\n            <Card className=\"card\" title=\"Newsletter / E-mailer\" subtitle=\"from \" number=\"1000\" button=\"Order\"\n            text=\"Typically 4550-500 words, an e-book is perfect for your target audience ranging from prospecive customers to users\"/>\n          </div>\n          <div className=\"column\">\n            <Card className=\"card\" title=\"Whitepaper\" subtitle=\"from \" number=\"2000\" button=\"Order\"\n            text=\"Typically 4550-500 words, an e-book is perfect for your target audience ranging from prospecive customers to users\"/>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"column\">\n            <Card className=\"card\" title=\"e-book\" subtitle=\"from \" number=\"1000\" button=\"Order\"\n            text=\"Typically 4550-500 words, an e-book is perfect for your target audience ranging from prospecive customers to users\"/>\n          </div>\n          <div className=\"column\">\n            <Card className=\"card\" title=\"Report / Guide\" subtitle=\"from \" number=\"1000\" button=\"Order\"\n            text=\"Typically 4550-500 words, an e-book is perfect for your target audience ranging from prospecive customers to users\"/>\n          </div>\n          <div className=\"column\">\n            <Card className=\"card\" title=\"Product Description\" subtitle=\"from \" number=\"500\" button=\"Order\"\n            text=\"Typically 4550-500 words, an e-book is perfect for your target audience ranging from prospecive customers to users\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}